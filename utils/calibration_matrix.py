import numpy as np

# Rotation matrix
# R = np.array([
#     [9.9999833e-01, -2.7148584e-05, -1.8177480e-03],
#     [2.5708909e-05, 9.9999952e-01, -8.6851866e-04],
#     [1.8178272e-03, 8.6851994e-04, 9.9999785e-01]
# ])

R = np.array([[9.999788e-01, -5.008404e-03, -4.151018e-03], [4.990516e-03, 9.999783e-01, -4.308488e-03], [4.172506e-03, 4.287682e-03, 9.999821e-01]])

# Translation matrix
# T = np.array([[-0.00039439, -0.00040556, 0.0172676]])
T = np.array([[5.954406e-02, -7.675338e-04, 3.582565e-03]])

# Intrinsic matrix
# K = np.array([[[194.9017, 0., 207.81938],
#                [0., 173.46446, 64.08503],
#                [0., 0., 1.]]])
K = np.array([[[9.601149e+02, 0.000000e+00, 6.947923e+02], [0.000000e+00, 9.548911e+02, 2.403547e+02], [0.000000e+00, 0.000000e+00, 1.000000e+00]]])

# Camera calibration matrix
P_rect_02 = np.zeros((3, 4))
P_rect_02[:3, :3] = K @ R
P_rect_02[:3, 3] = K @ T.T.squeeze()

print(P_rect_02)
